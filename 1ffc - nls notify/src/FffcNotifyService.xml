<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


	<!-- ********************************************************************************** -->
	<!-- ******** Import the common beans									    *********** -->
	<!-- ********************************************************************************** -->
	<context:annotation-config />
	<import resource="classpath:/db/common_config.xml" />
	
	<!--  ********************************************************************************** --> 
    <!--  ****** Import the SQL Statement 									**************** --> 
    <!--  ********************************************************************************** --> 
	<bean id="sqlUserIdFromAttrNameAndValue" class="java.lang.String">
		<constructor-arg>
			<value> 	
				SELECT 
					aup.id 
				FROM 
					auth_user_profile aup 
				WHERE 
					aup.attrname = :attrName     
				AND 
					aup.attrvalue = :attrValue  
			</value>
		</constructor-arg>
	</bean>

	<bean id="dao" class="com.sorrisotech.svcs.fffcnotify.dao.FffcNotifyDao">
		<property name="authUserProfileAddSQL" ref="authUserProfileAddSQL.${database}"/>
	</bean>
	
	<bean name="authUserProfileAddSQL.postgres" class="java.lang.String">
    	<constructor-arg>
    		<value>
    			<![CDATA[
    				INSERT INTO auth_user_profile (
						id,
						attrname,
						attrvalue
					) VALUES (
						:id,
						:attrname,
						:attrvalue
					) ON CONFLICT (
						id,
						attrname
					) DO UPDATE SET 
						attrvalue = :attrvalue
    			]]>
    		</value>
    	</constructor-arg>
    </bean>
    
    <bean name="authUserProfileAddSQL.mysql" class="java.lang.String">
	    <constructor-arg>
	        <value>
	            <![CDATA[
	                INSERT INTO auth_user_profile (
	                    id,
						attrname,
						attrvalue
	                ) VALUES (
	                    :id,
						:attrname,
						:attrvalue
	                ) ON DUPLICATE KEY UPDATE 
						attrvalue = :attrvalue
	            ]]>
	        </value>
	    </constructor-arg>
	</bean>
	
	<bean name="authUserProfileAddSQL.oracle" class="java.lang.String">
	    <constructor-arg>
	        <value>
	            <![CDATA[
	                MERGE INTO auth_user_profile aup
	                USING dual
	                ON (
	                    aup.id = :id AND
	                    aup.attrname = :attrname
	                )
	                WHEN MATCHED THEN
	                    UPDATE SET 
							aup.attrvalue = :attrvalue
	                WHEN NOT MATCHED THEN
	                    INSERT (
	                        aup.id,
							aup.attrname,
							aup.attrvalue
	                    ) VALUES (
	                        :id,
							:attrname,
							:attrvalue
	                    )
	            ]]>
	        </value>
	    </constructor-arg>
	</bean>

</beans>