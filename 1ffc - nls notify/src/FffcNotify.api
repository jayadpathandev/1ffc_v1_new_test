//*****************************************************************************
// The purpose of this interface is to provide methods for configuring the 
// notifications in the NTF_PREFERENCES table.   
define service FffcNotify(com.sorrisotech.app.serviceapi.uc.UcRequestClient) [
	
	 generate [
       category: fffcnotify    
    ]
    
    // Setting user address setting in NLS
	define method SetUserAddressNls [
		
		// The ID of the user we are setting the address for
		string customerId
		
		// The name of the channel the user is setting the address for.
		string channel
		
		// The address the user wants to use for the channel. 
		optional string address
		
		// The browser geo-location of user. 
		string browserGeo
		
		// The IP geo-location of user. 
		string ipGeo
		
		// IP address of user 
		string ipAddress
		
		// e consent active or not.
		string sConsentActive
	]
	
	// Setting user contact setting in NLS
	define method SetContactSettingsNls [
		
		// The ID of the user we are setting the address for.
		string customerId
		
		// The configuration for the user.
		string jsonConfig
		
	]
	
	//*************************************************************************
    // Get userId from customerId(orgId)
    // 
	define method FetchUserId [
		// CustomerId(orgId) of user
		string customerId
		
	] returns [
		// Unique identifier of user.	
		string userid
	]
	
	//*************************************************************************
    // Set contact preferences of user to database
    // 
	define method SetContactPreferences [
		// Unique identifier of user.
		string userid
		// Date and time.
		string dateTime
		// All channel address settings JSON of user.
		string channelAddresses
		// All topic preferences settings JSON of user.
		string topicPrefrences
		
	] returns [
		
		//---------------------------------------------------------------------
        // If the password does not appear in the user's recent history this
        // will be set to "unique" otherwise it will be set to "exists".  If 
        // there was an issue "error" will be returned.    	
    	list status [
    		good
    		validationError
    	    error
    	]
	]
	
	// Create users default contact preferences setting at NLS.
	define method RegisterUserNls [
		
		// The ID of the user we are setting the address for.
		string customerId
		
		// The browser geo-location of user. 
		string browserGeo
		
		// The IP geo-location of user. 
		string ipGeo
		
		// IP address of user 
		string ipAddress
		
		// The channel address configuration for the user.
		string channelAddrJsonConfig
		
		// The contact preferences configuration for the user.
		string contactPrefsJsonConfig
		
		// e consent active or not.
		string sConsentActive
	]
]