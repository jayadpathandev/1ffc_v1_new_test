<?xml version="1.0" encoding="UTF-8"?><beans xmlns="http://www.springframework.org/schema/beans"       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"       xmlns:batch="http://www.springframework.org/schema/batch"       xmlns:util="http://www.springframework.org/schema/util"       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">    <!-- ********************************************************************************** -->    <!-- ******** This file contains bean definitions that are specific to and        ***** -->    <!-- ******** required by the Payment History Purge Job                                     ***** -->    <!-- ********************************************************************************** -->    <!-- ********************************************************************************** -->    <!-- ******** Import common definitions like dataSource, jdbcTemplate,            ***** -->    <!-- ******** jobRepository, simpleStep.                                          ***** -->    <!-- ********************************************************************************** -->    <import resource="classpath:common-context.xml"/>        <!-- ***************************************************************************** -->    <!-- ********  Load properties for the following:                         ******** -->    <!-- ********   Database connection details                               ******** -->    <!-- ********   Transaction History Purge Job configuration details.      ******** -->    <!-- ***************************************************************************** -->    <bean id="propertyConfigurer"        class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">       <property name="propertySources">       <bean class="com.sorrisotech.utils.ConfigFactory">            <property name="sources">                <list>                                        <bean class="com.sorrisotech.utils.ConfigFile">                        <constructor-arg value="false"/>                        <constructor-arg value="db/common.properties"/>                        <property name="cacheTimeout" value="10"/>                    </bean>                    <bean class="com.sorrisotech.utils.ConfigFile">                        <constructor-arg value="false"/>                        <constructor-arg value="common/user_config.properties"/>                        <property name="cacheTimeout" value="10"/>                    </bean>                    <bean class="com.sorrisotech.utils.ConfigFile">                        <constructor-arg value="false"/>                        <constructor-arg value="common/file_path.properties"/>                        <property name="cacheTimeout" value="10"/>                    </bean>                    <bean class="com.sorrisotech.utils.ConfigFile">                        <constructor-arg value="false"/>                        <constructor-arg value="purge.properties"/>                        <property name="cacheTimeout" value="10"/>                    </bean>                    <bean class="com.sorrisotech.utils.ConfigDefine"/>                </list>            </property>        </bean>       </property>   </bean>        <!-- *********************************************************************************************** -->    <!-- **** Definition of the Transaction History Purge Job bean. The job consists of 3 steps:   ***** -->    <!-- ****     - step 1 purges audit events older than the number of days set by the            ***** -->    <!-- ****       administrator from the audit tables                                            ***** -->    <!-- ****     - if Step 1 fails, Step 2 sends a notification to the batch job administrator    ***** -->    <!-- ****       that the job has failed. Step 3 is never executed in this case.                ***** -->    <!-- ****     - if Step 1 completes successfully, Step 3 sends a notification to the batch     ***** -->      <!-- ****       job administrator that the job has completed successfully. Step 2 is never     ***** -->    <!-- ****       executed in this case.                                                         ***** -->    <!-- ****                                                                                      ***** -->     <!-- *********************************************************************************************** -->    <batch:job id="transactionHistoryPurgeJob" parent="simpleJob">        <batch:step id="transactionHistoryStep">             <batch:tasklet ref="transactionHistoryTasklet.${database}"/>             <batch:next on="FAILED" to="sendFailedNotificationStep"/>                         <batch:next on="COMPLETED" to="sendSuccessNotificationStep"/>                     </batch:step>         <batch:step id="sendFailedNotificationStep">             <batch:tasklet ref="failureNotificationTasklet"/>        </batch:step>        <batch:step id="sendSuccessNotificationStep">            <batch:tasklet ref="successNotificationTasklet"/>        </batch:step>            </batch:job>    <!-- **************************************************************************************** -->    <!-- ****   The tasklet bean which deletes old transactionHistorys from the              **** -->    <!-- ****       fffc_transactions table                                                  **** -->    <!-- ****   The class calls a stored purge procedure.                                    **** -->    <!-- **************************************************************************************** -->    <bean id="transactionHistoryTasklet"         class="com.sorrisotech.batch.fffc.transaction.purge.ExecuteTasklet"        abstract="true">        <property name="jdbcTemplate" ref="namedParameterJdbcTemplate"/>        <property name="txManager"><ref bean="transactionManager"/></property>        <property name="dateSql">            <value>                SELECT                 	attr_value                FROM                   	pmt_config                 WHERE                  	config_group = 'PAYMENT'                 AND                    	attr_id = (SELECT attr_id FROM pmt_attribute WHERE attr_name = 'Payment.TodaysDate')            </value>        </property>                <property name="deleteRowSql">	         <value>	         	DELETE FROM 	         		fffc_transactions 				WHERE  					online_id = :online_id					        	         </value>         </property>		         <property name="daysToKeep" value="${keep.transaction.history.for.x.days}"/>    </bean>        <bean id="transactionHistoryTasklet.oracle" parent="transactionHistoryTasklet">    	<!-- List of SQL Statements`to execute for this task. -->           	        <property name="purgeSql">	        <value>	           call purge_data_pkg.purge_using_rowid_query(	               'BILL_FILE_META_DATA',	               'SELECT ROWID AS l_rowid from BILL_FILE_META_DATA where status_update_date &lt; to_date('':date'',''YYYYMMDD'') and bill_file_name like ''${th.loader.pattern}''',	                ${purge.chunk.size}	           )	        </value>                                    </property>        <property name="deleteSql">		         <value>			         SELECT 					        online_id					 FROM   					 		fffc_transactions 					 WHERE  					 		"date" &lt; :date and					 		rownum &lt; ${purge.chunk.size}		         </value>		                 </property>    </bean>          <bean id="transactionHistoryTasklet.mysql" parent="transactionHistoryTasklet">     	<!-- List of SQL Statements`to execute for this task. -->               <property name="purgeSql">	        <value>	           call purge_data_pkg_purge_using_rowid_query(	               'BILL_FILE_META_DATA',	               'status_update_date &lt; str_to_date('':date'',''%Y%m%d'') and bill_file_name like ''${th.loader.pattern}''', 	                ${purge.chunk.size}	           )	        </value>                                    </property>        <property name="deleteSql">                 <value>			         SELECT 					        online_id 					 FROM   					 		fffc_transactions 					 WHERE  					 		 "date" &lt; :date					 LIMIT ${purge.chunk.size}		         </value>	        </property>    </bean>        <bean id="transactionHistoryTasklet.postgres" parent="transactionHistoryTasklet">     	<!-- List of SQL Statements`to execute for this task. -->               <property name="purgeSql">	        <value>	           select purge_data_pkg_purge_using_rowid_query(	               'BILL_FILE_META_DATA',	               'SELECT ctid AS l_rowid from BILL_FILE_META_DATA where status_update_date &lt; to_date('':date'',''YYYYMMDD'') and bill_file_name like ''${th.loader.pattern}''',	                ${purge.chunk.size}	           )	        </value>                                    </property>        <property name="deleteSql">                 <value>			         SELECT 					        online_id 					 FROM   					 		fffc_transactions 					 WHERE  					 		"date" &lt; :date					 LIMIT  ${purge.chunk.size}		         </value>	        </property>    </bean>        <!-- ********************************************************************************** -->    <!-- **** Notification tasklet used to send out notification(s) informing           *** -->     <!-- **** successful completion of the job.                                         *** -->    <!-- ********************************************************************************** -->    <bean id="successNotificationTasklet"         class="com.sorrisotech.batch.common.notify.NotificationTasklet">        <property name="enabled" value="${notification.onSuccess.enabled}"/>        <property name="notificationType" value="${batch.success}"/>        <property name="destination" value="${notification.onSuccess.emails}"/>        <property name="locale">            <util:constant static-field="java.util.Locale.US"/>        </property>        <property name="parameters">            <map>               <entry key="jobName" value="${job.name}"/>            </map>       </property>    </bean>        <!-- ********************************************************************************** -->    <!-- **** Notification tasklet used to send out notification(s) informing failure   *** -->     <!-- **** of the job.                                                               *** -->    <!-- ********************************************************************************** -->    <bean id="failureNotificationTasklet"         class="com.sorrisotech.batch.common.notify.NotificationTasklet">        <property name="enabled" value="${notification.onFailure.enabled}"/>        <property name="notificationType" value="${batch.failure}"/>        <property name="destination" value="${notification.onFailure.emails}"/>        <property name="locale">            <util:constant static-field="java.util.Locale.US"/>        </property>        <property name="parameters">            <map>               <entry key="jobName" value="${job.name}"/>            </map>       </property>    </bean></beans>